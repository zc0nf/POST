#!/bin/bash
#############################################################################################
#		
# Version Du Script : v1.31
# Nom du Script : usenet								
#					
# -------------------------------------- HISTORIQUE ---------------------------------------
# 
# > 24/08/17 V1.31
# * Ajout dans paramètre dans le fichier de conf afin de choisir le repertoire ou envoyer les NZB (Demande de Hm)
# 
# > 23/08/17 V1.3
# * Ajout du paramètre -c permettant la compression du NZB obtenu (Demande de Hm)
# * Changement de la méthode permettant d'ajouter le password au sein du NZB (Demande de Hm)
# 
# > 23/08/17 V1.2
# * Ajout de la possibilité de choisir entre rar et 7z
# 
# > 23/08/17 V1.1
# * Ajout d'un fichier log (Demande de Hm)
# 
# > 22/08/17 V1.0
# * Version initial du script
#-------------------------------------- INSTRUCTIONS --------------------------------------
#
# sudo apt-get install p7zip-full cfv mysql nodejs node-gyp node-async git
# sudo npm install -g nyuu
# sudo git clone https://github.com/animetosho/ParPar
# sudo npm install -g
#
##############################################################################################

BASEPATH=$(pwd)
SCRIPT=${0}
SCRIPT_NAME=${SCRIPT##*/}
SCRIPT_PATH=$(dirname "${SCRIPT}")

source "$SCRIPT_PATH"/../conf/common.sh
source "$SCRIPT_PATH"/../conf/conf.sh

usage()
{

cat << EOF
usage: $0 options/

OPTIONS:
-h  Voir ce message d\'aide
-s  Chosir le fichier|dossier source (obligatoire)
-p  si vous désirer protéger vos archive avec un password aléatoire
-n  Si vous désirez utiliser un nom aléatoire pour vos archive
-f  Si vous désirez utiliser un sender aléatoire
-g	Si vous désirez utiliser un groupe aléatoire
-z	Si vous préferez utiliser 7Z plutot que rar (bien plus performant)
-c  Pour compresser le NZB obtenu
-v  Pour activer le mode DEBUG
-F  Upload full random

EOF
}

while getopts "vpnfFgczs:" opt
do
	case $opt in
	"h")
		usage
		exit 1
	;;

	"s")
		SOURCE="$OPTARG"	
	;;
	
	"p")
		RANDOMPASS="YES"	
	;;
	
	"n")
		RANDOMNAME="YES"	
	;;
	
	"f")
		RANDOMFROM="YES"	
	;;
	
	"g")
		RANDOMGROUP="YES"	
	;;
	
	"c")
		COMPRESSNZB="YES"	
	;;
	
	"z")
		SEVENZ="YES"	
	;;
	
	"F")
		FULLRANDOM="YES"
		RANDOMNAME="YES"
		RANDOMPASS="YES"	
	;;
	
	"v")
         set -x
    ;;
    
	"?")
		echo "Invalid option: -$OPTARG"
		usage
		exit 1
	;;
esac
done

shift $((OPTIND-1))

#-------------- Tests des dépendances ------------------ 
LISTE_APPLIS="nyuu "${PAR2BIN}" cfv 7z rar bc openssl pwgen perl" 
sortie="notok" 
	for i in $LISTE_APPLIS; do 
	which "$i" > /dev/null 2>&1 
		if [ "$?" = "1" ]; 
		then [ "$sortie" = "notok" ] && echo -e "${NORMAL}""Programme(s) manquant(s) : " 
		echo -e "${VERTB}" "${i}""${NORMAL}" 
		sortie="ok" 
		fi; 
	done 
	if [ "$sortie" = "ok" ]; 
	then 
	echo -e "${VERTB}""Dependances ok""${NORMAL}" 
	exit -1 
	fi 
#-------------- fin Tests des dépendances ------------------  

if [ -z "${SOURCE}" ] ; then
	echo -e "$BLEUB"
    usage
	echo -e "$NORMAL"
    exit 0
fi

#Création d\'un repertoire temporaire et du répertoire ou seront stocker les nzb
if [ ! -d "$SCRIPT_PATH"/../temp ]
then 
	mkdir "$SCRIPT_PATH"/../temp 
fi
TEMP="$SCRIPT_PATH/../temp"

if [ -z "${NZBOUTPUT}" ]; then
	if [ ! -d "$SCRIPT_PATH"/../nzb ]
	then 
	mkdir "$SCRIPT_PATH"/../nzb; 
	fi
	NZBOUTPUT="$SCRIPT_PATH/../nzb"
fi

#Génération du nom aléatoire
function randname() {
CODE3=$(echo "${DOSSIER}" | date +%s | sha256sum | base64 | head -c 30)
echo "${CODE3^^}"
}

#Génération d\'un password pour les rar
function randpass() {
pass=$(pwgen -cBsn 13 1)
echo "$pass"
}

#Génération d\'un user aléatoire pour l'upload
function randsend() {
part1=$(openssl rand -base64 32	| tr -cd '[:alpha:]' | head -c 8 | tr '[:upper:]' '[:lower:]')
part2=$(openssl rand -base64 32	| tr -cd '[:alpha:]' | head -c 8 | tr '[:upper:]' '[:lower:]')
sender=$"${part1}"@"${part2}".com 
echo "${sender}"	
}

#Verification si la source est un fichier ou un répertoire
function verifrep() {	
RELEASE=$(basename "${SOURCE}")
if [ -d "${RELEASE}" ]; then
    DOSSIER="${RELEASE}"
else
	DOSSIER="${RELEASE%.*}"
	mkdir "${DOSSIER}" 
	cp -rl "${RELEASE}" "${DOSSIER}"
	DIRECTORY="NO"
fi
echo -e "$VERT""CREATION DES RÉPERTOIRES""$NORMAL"

if [[ ${RANDOMNAME} = "YES" ]]; then
	RANDNAME=$(randname)
	mkdir "${TEMP}"/"${RANDNAME}"
	NZBNAME=${RANDNAME}
else
	mkdir "${TEMP}"/"${DOSSIER}"
	NZBNAME=${DOSSIER}
fi
}

#Calcul de la taille des rar
function rarsize() {
	echo -e "$BLEUB""CALCUL DE LA TAILLE DES RAR""$NORMAL"
	SIZE=$(du -BM -c "${DOSSIER}" | grep total | awk -F "M" '{ print $1 }')
	HUMANSIZE=$(du -h "${DOSSIER}" | awk '{ print $1 }')
if [[ $SIZE -gt 16384 ]]
	then 
		TEMPRARSIZE="524288000"
		SEGNBR=$(echo "scale=2; $TEMPRARSIZE/716800" | bc | awk '{printf("%d\n",$1 + 0.5)}')
		RARSIZE=$(echo "scale=0; $SEGNBR*716800" | bc)
		if [[ $SIZE -gt 179200 ]] && [[ $SIZE -lt 358400 ]]
		then
			PAR2BLOCKSIZE="11468800"
		elif [[ $SIZE -gt 89600 ]] && [[ $SIZE -lt 179200 ]]
		then
			PAR2BLOCKSIZE="5734400"
		elif [[ $SIZE -gt 44800 ]] && [[ $SIZE -lt 89600 ]]
		then
			PAR2BLOCKSIZE="2867200"
		elif [[ $SIZE -gt 22400 ]] && [[ $SIZE -lt 44800 ]]
		then
			PAR2BLOCKSIZE="1433600"
		elif [[ $SIZE -lt 22400 ]]
		then
			PAR2BLOCKSIZE="716800"
		fi
		ARTCLESIZE="700"
	elif [[ $SIZE -lt 16384 ]] && [[ $SIZE -gt 8192 ]]
	then	
		TEMPRARSIZE="262144000"	
		SEGNBR=$(echo "scale=2; $TEMPRARSIZE/655360" | bc | awk '{printf("%d\n",$1 + 0.5)}')
		RARSIZE=$(echo "scale=0; $SEGNBR*655360" | bc)
		PAR2BLOCKSIZE="655360"
		ARTCLESIZE="640"
	elif [[ $SIZE -lt 8192 ]] && [[ $SIZE -gt 4096 ]]
	then	
		TEMPRARSIZE="104857600"
		SEGNBR=$(echo "scale=2; $TEMPRARSIZE/512000" | bc | awk '{printf("%d\n",$1 + 0.5)}')
		RARSIZE=$(echo "scale=0; $SEGNBR*512000" | bc)
		PAR2BLOCKSIZE="512000"
		ARTCLESIZE="500"
	elif [[ $SIZE -lt 4096 ]] && [[ $SIZE -gt 1024 ]]
	then 
		TEMPRARSIZE="52428800"
		SEGNBR=$(echo "scale=2; $TEMPRARSIZE/409600" | bc | awk '{printf("%d\n",$1 + 0.5)}')
		RARSIZE=$(echo "scale=0; $SEGNBR*409600" | bc)
		PAR2BLOCKSIZE="409600"
		ARTCLESIZE="400"
	elif [[ $SIZE -lt 1024 ]] && [[ $SIZE -gt 512 ]]
	then 
		TEMPRARSIZE="26214400"
		SEGNBR=$(echo "scale=2; $TEMPRARSIZE/245760" | bc | awk '{printf("%d\n",$1 + 0.5)}')
		RARSIZE=$(echo "scale=0; $SEGNBR*245760" | bc)
		PAR2BLOCKSIZE="245760"
		ARTCLESIZE="240"
	elif [[ $SIZE -lt 512 ]]; 
	then 
		TEMPRARSIZE="15728640"
		SEGNBR=$(echo "scale=2; $TEMPRARSIZE/131072" | bc | awk '{printf("%d\n",$1 + 0.5)}')
		RARSIZE=$(echo "scale=0; $SEGNBR*131072" | bc)
		PAR2BLOCKSIZE="131072"
		ARTCLESIZE="128"
		
	fi
}

#creation des archive et sfv
function raring() {
	echo -e "$JAUNE""CRÉATION DES ARCHIVE""$NORMAL" 	
	 
	if [[ ${SEVENZ} = "YES" ]]; then
		if [[ ${RANDOMPASS} == "YES" ]]; then
			RARPASS=$(randpass)
			7z a -t7z -m0=copy -ms=8m -mmt=8 -mx=1 -mhe=on -v"${RARSIZE}"b -p"${RARPASS}" -- "${TEMP}"/"${NZBNAME}"/"${NZBNAME}" "${DOSSIER}"
		else
			7z a -t7z -m0=copy -ms=8m -mmt=8 -mx=1 -mhe=on -v"${RARSIZE}"b -- "${TEMP}"/"${NZBNAME}"/"${NZBNAME}" "${DOSSIER}"
		fi
	else
		formatter="$SCRIPT_PATH"/../tools/rar.pl
		if [[ ${RANDOMPASS} = "YES" ]]; then
			RARPASS=$(randpass)
			{
				flock 204
				rar a -v"${RARSIZE}"b -hp"${RARPASS}" -m0 "${TEMP}"/"${NZBNAME}"/"${NZBNAME}".rar "${DOSSIER}" \
				|& perl $formatter RAR $SOURCE
				rar_return=${PIPESTATUS[1]}
				echo "" # Add a \n
			} 204>"$SCRIPT_PATH"/../tools/rar.lock;
		else
			rar a -v"${RARSIZE}"b -m0 "${TEMP}"/"${NZBNAME}"/"${NZBNAME}".rar "${DOSSIER}"
		fi
	fi
	
	cd "${TEMP}"/"${NZBNAME}"
	echo -e "$ROSE""CRÉATION DU SFV""$NORMAL"
	cfv -C -f "${NZBNAME}".sfv
	cd "${BASEPATH}"/
}

#creation des PAR2
function createpar() { 
	echo -e "$VERTB""CRÉATION DES PAR2""$NORMAL"
	
	if [[ "${PAR2BIN}" == "par2" ]]
	then
		par2create -s"${PAR2BLOCKSIZE}" -r"${PARPERCENT}" -m16000 -a"${TEMP}"/"${NZBNAME}"/"${NZBNAME}".par2 -R "${TEMP}"/"${NZBNAME}"/
	else
		parpar -s "${PAR2BLOCKSIZE}" -r"${PARPERCENT}"% -d pow2 -m 16000M -o "${TEMP}"/"${NZBNAME}"/"${NZBNAME}".par2 -R "${TEMP}"/"${NZBNAME}"/
	fi
}

#Randomisation du groupe ou poster
function randomgroup() {

N=1	
for index in $(shuf --input-range=0-$(( ${#RANDOMGROUP[*]} - 1 )) | head -${N})
do
    echo "${RANDOMGROUP[$index]}"
done	
}

#Upload sur les newsgroups
function uploadtong() {
	echo -e "$CYAN""UPLOAD SUR LES NEWSGROUPS""$NORMAL"
	if [[ ${RANDOMFROM} = YES ]] || [ -z "${NGFROM}" ]
	then
		randsend
		NGFROM=${sender}
	fi
	
	if [[ ${RANDOMGROUP} = YES ]]
	then
		#randomgroup
		NGGROUP=$(randomgroup)
	fi
	
	if [[ ${COMPRESSNZB} = YES ]]; then
		if [[ ${RANDOMPASS} == YES ]]; then
			nyuu -h "${NGHOST}" -n "${NGNBRCONNECT}" -u "${NGUSER}" -p "${NGPASS}" -f "${NGFROM}" -g "${NGGROUP}" -a "${ARTCLESIZE}"k -S -M password="${RARPASS}" --nzb-compress gzip --nzb-compress-level 9 -o "${NZBOUTPUT}"/"${DOSSIER}".nzb  -r include "${TEMP}"/"${NZBNAME}"/ 
		else
			nyuu -h "${NGHOST}" -n "${NGNBRCONNECT}" -u "${NGUSER}" -p "${NGPASS}" -f "${NGFROM}" -g "${NGGROUP}" -a "${ARTCLESIZE}"k -S --nzb-compress gzip --nzb-compress-level 9 -o "${NZBOUTPUT}"/"${DOSSIER}".nzb -r include "${TEMP}"/"${NZBNAME}"/ 
		fi
	else
		if [[ ${RANDOMPASS} == YES ]]; then
			nyuu -h "${NGHOST}" -n "${NGNBRCONNECT}" -u "${NGUSER}" -p "${NGPASS}" -f "${NGFROM}" -g "${NGGROUP}" -a "${ARTCLESIZE}"k -S -M password="${RARPASS}" -o "${NZBOUTPUT}"/"${DOSSIER}".nzb -r include "${TEMP}"/"${NZBNAME}"/ 
		else
			nyuu -h "${NGHOST}" -n "${NGNBRCONNECT}" -u "${NGUSER}" -p "${NGPASS}" -f "${NGFROM}" -g "${NGGROUP}" -a "${ARTCLESIZE}"k -S -o "${NZBOUTPUT}"/"${DOSSIER}".nzb -r include "${TEMP}"/"${NZBNAME}"/ 
		fi	
	fi
}

#Randomisation du groupe ou poster
function randomgroup() {

N=1	
for index in $(shuf --input-range=0-$(( ${#RANDOMGROUP[*]} - 1 )) | head -${N})
do
    echo "${RANDOMGROUP[$index]}"
done	
}

#upload en full random
function uploadtongfullrandom() {
mkdir "${TEMP}""${NZBTEMP}"
echo -e "$ROUGE""FULL RANDOM ACTIVATION""$NORMAL"

echo -e "$VERT""RANDOMISATION DES ARCHIVES""$NORMAL"

cd "${TEMP}"/"${NZBNAME}"/
declare -A archivename
for archive in *; 
do  
	archivecrypt=$(pwgen -cBsn 30)
	mv "${archive}" "${archivecrypt}"
	archivename[$archivecrypt]="${archive}"
done

echo -e "$CYAN""UPLOAD SUR LES NEWSGROUPS""$NORMAL"

for fichiercrypt in *; 
do 
	nyuu -h "${NGHOST}" -n "${NGNBRCONNECT}" -u "${NGUSER}" -p "${NGPASS}" -f "$(randsend)" -g "$(randomgroup)" -a "${ARTCLESIZE}"k -S -M password="${RARPASS}" -o "${TEMP}""${NZBTEMP}""${fichiercrypt}".nzb "${fichiercrypt}"; 
done

echo -e "$CYAN""CREATION DU NZB""$NORMAL"

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!DOCTYPE nzb PUBLIC \"-//newzBin//DTD NZB 1.1//EN\" \"http://www.newzbin.com/DTD/nzb/nzb-1.1.dtd\">
<nzb xmlns=\"http://www.newzbin.com/DTD/2003/nzb\">
	<head>
		<meta type=\"password\">${RARPASS}</meta>
	</head>" >> "${NZBOUTPUT}"/"${DOSSIER}".nzb
	
cd "${TEMP}"/nzbtemp/

for nzb in *.nzb;
do 
	php "$SCRIPT_PATH"/../tools/nzb.php "${nzb}" "${archivename["${nzb%.*}"]}" >> "${NZBOUTPUT}"/"${DOSSIER}".nzb 	
done

echo "</nzb>" >> "${NZBOUTPUT}"/"${DOSSIER}".nzb 

}



#nettoyage
function cleanup() {
	echo -e "$ROSEB""NETTOYAGE""$NORMAL"
	cd "${BASEPATH}"
	rm -rf "${TEMP}"/"${NZBNAME}"/
	if [[ ${DIRECTORY} = "NO" ]]
		then rm -rf "${DOSSIER}"
	fi
	cd "${BASEPATH}"/
	rm -rf "${TEMP}"/nzbtemp
	unset archivename
}

#Ajout au fichier log
function log() {
	local prefix="[$(date +%Y/%m/%d\ %H:%M:%S)]"
	echo "${prefix} ${SOURCE} ${HUMANSIZE} ${NZBNAME} ${RARPASS}" >> "$SCRIPT_PATH/../usenetLog.log"
}

verifrep
rarsize
raring
createpar
if [[ ${FULLRANDOM} == YES ]]; then
	uploadtongfullrandom
else
	uploadtong
fi
   cleanup
log



echo -e "$ROUGE""VOTRE UPLOAD DE" "$BLEU""${SOURCE}""$ROUGE"" EST TERMINÉ"

if [[ ${RANDOMNAME} = "YES" ]]; then
	echo -e "IL A ÉTÉ UPLOADÉ SOUS LE NOM" "$BLEU""${RANDNAME}""$ROUGE"
fi

if [[ ${RANDOMPASS} = "YES" ]]; then
	echo -e "AVEC COMME PASSWORD" "$BLEU""${RARPASS}""$NORMAL"
fi

echo "${SCRIPT_NAME}" FINIS
	



